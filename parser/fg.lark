start 			: "fig" ID "{" stmt_list "}"	-> figure

stmt_list 		: (stmt)*
stmt 			: size_stmt
       			| range_stmt
       			| function_stmt
       			| plotting_stmt 
       			| print_stmt
       			| show_plots


size_stmt 	: "size" "<-" INT ["," INT] [attr_list]			-> size_stmt
			| "size" "<-" "(" INT "," INT ")" [attr_list] 	-> size_stmt

range_stmt 	: ID "<-" (points | range)					-> range_stmt
range 		: SIGNED_INT "to" SIGNED_INT 				-> range_int_to_int
			| "(" SIGNED_INT "to" SIGNED_INT ")"		-> range_int_to_int
			| "(" expr "," expr ")" ("step" expr)?		-> range_real_to_real
expr		: expr OPERATOR expr 						-> expr_op_expr
			| "(" expr ")"								-> nested_expr
			| "-" expr 									-> expr_negation
			| REAL 										-> expr_real
			| CONST 									-> expr_const

points 		: "[" REAL ("," REAL)* "]"						-> real_points_list
			| "[" ESCAPED_STRING ("," ESCAPED_STRING)* "]"	-> str_points_list



function_stmt 	: ID ":=" function_expr 					-> func_stmt
function_expr 	: function_expr OPERATOR function_expr 		-> func_op_func
				| "(" function_expr ")"						-> nested_func
				| ID "(" function_expr ")"					-> func_call
				| REAL 										-> func_real
				| ID										-> func_id
				| CONST										-> func_const
				| "-" function_expr							-> func_negation

plotting_stmt 		: "plot" "(" ID "," ID ("," [attr_list])? ")"	-> plt_stmt
print_stmt		:	"print" "(" ID ("," ID)* ")" -> print_stmt
show_plots		: 	"show_plots" "(" ")" -> show_plots

attr_list 		: "{" attr ("," attr)* "}"
attr 			: ID ":" ATTR_VALUE							-> attribute
ATTR_VALUE 		: ESCAPED_STRING | REAL
OPERATOR 		: "+" | "-" | "*" | "/" | "^" | "%"
ESCAPED_STRING 	: ("\"" _STRING_ESC_INNER "\"")
				| ("'" _STRING_ESC_INNER "'")
				| ("(" _STRING_ESC_INNER ")")
COMMENT			: 	"#" /.*/



CONST 	: "PI" | "EXP"



LCASE_LETTER    : "a".."z"
UCASE_LETTER    : "A".."Z"

LETTER          : UCASE_LETTER | LCASE_LETTER

ID 		        : ("_"|LETTER) ("_"|LETTER|DIGIT)*

DIGIT           : "0".."9"

INT             : DIGIT+
SIGNED_INT      : ["+"|"-"] DIGIT+
DECIMAL         : INT "." INT? | "." INT

_EXP            : ("e"|"E") SIGNED_INT
FLOAT           : INT _EXP | DECIMAL _EXP?

NUMBER          : FLOAT | INT
REAL		    : ["+"|"-"] NUMBER 


_STRING_INNER       : /.*?/
_STRING_ESC_INNER   : _STRING_INNER /(?<!\\)(\\\\)*?/


WS: /[ \t\f\r\n]/+

%ignore WS
%ignore COMMENT
